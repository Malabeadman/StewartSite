{"version":3,"file":"mdb-angular-ui-kit-modal.mjs","sources":["../../../projects/mdb-angular-ui-kit/modal/modal-config.ts","../../../projects/mdb-angular-ui-kit/modal/modal-ref.ts","../../../projects/mdb-angular-ui-kit/modal/modal-container.component.ts","../../../projects/mdb-angular-ui-kit/modal/modal-container.component.html","../../../projects/mdb-angular-ui-kit/modal/modal.service.ts","../../../projects/mdb-angular-ui-kit/modal/modal.module.ts","../../../projects/mdb-angular-ui-kit/modal/mdb-angular-ui-kit-modal.ts"],"sourcesContent":["import { ViewContainerRef } from '@angular/core';\n\n/* eslint-disable @typescript-eslint/no-inferrable-types */\nexport class MdbModalConfig<D = any> {\n  animation?: boolean = true;\n  backdrop?: boolean = true;\n  ignoreBackdropClick?: boolean = false;\n  keyboard?: boolean = true;\n  modalClass?: string = '';\n  containerClass?: string = '';\n  viewContainerRef?: ViewContainerRef;\n  data?: D | null = null;\n}\n","import { OverlayRef } from '@angular/cdk/overlay';\nimport { Observable, Subject } from 'rxjs';\nimport { MdbModalContainerComponent } from './modal-container.component';\n\nexport class MdbModalRef<T> {\n  constructor(protected _overlayRef: OverlayRef, private _container: MdbModalContainerComponent) {}\n\n  private readonly onClose$: Subject<any> = new Subject();\n  readonly onClose: Observable<any> = this.onClose$.asObservable();\n\n  close(message?: any): void {\n    this._container._close();\n\n    setTimeout(() => {\n      this._container._restoreScrollbar();\n      this.onClose$.next(message);\n      this.onClose$.complete();\n      this._overlayRef.detach();\n      this._overlayRef.dispose();\n    }, this._container.MODAL_TRANSITION);\n  }\n}\n","import { CdkPortalOutlet, ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ComponentRef,\n  ElementRef,\n  EmbeddedViewRef,\n  HostBinding,\n  Inject,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport { MdbModalConfig } from './modal-config';\nimport { ConfigurableFocusTrapFactory, ConfigurableFocusTrap } from '@angular/cdk/a11y';\nimport { fromEvent, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'mdb-modal-container',\n  templateUrl: 'modal-container.component.html',\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class MdbModalContainerComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild(CdkPortalOutlet, { static: true }) _portalOutlet: CdkPortalOutlet;\n  @ViewChild('dialog', { static: true }) modalDialog: ElementRef;\n\n  readonly _destroy$: Subject<void> = new Subject<void>();\n  readonly backdropClick$: Subject<MouseEvent> = new Subject<MouseEvent>();\n\n  _config: MdbModalConfig;\n\n  BACKDROP_TRANSITION = 150;\n  MODAL_TRANSITION = 200;\n\n  private _previouslyFocusedElement: HTMLElement;\n  private _focusTrap: ConfigurableFocusTrap;\n\n  @HostBinding('class.modal') modal = true;\n  @HostBinding('class.fade')\n  get hasAnimation(): boolean {\n    return this._config.animation;\n  }\n\n  constructor(\n    @Inject(DOCUMENT) private _document,\n    public _elementRef: ElementRef,\n    private _renderer: Renderer2,\n    private _focusTrapFactory: ConfigurableFocusTrapFactory\n  ) {}\n\n  ngOnInit(): void {\n    this._updateContainerClass();\n    this._renderer.setStyle(this._elementRef.nativeElement, 'display', 'block');\n    this._previouslyFocusedElement = this._document.activeElement as HTMLElement;\n    this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n\n    if (this._config.animation) {\n      setTimeout(() => {\n        this._renderer.addClass(this._elementRef.nativeElement, 'show');\n\n        setTimeout(() => {\n          this._focusTrap.focusInitialElementWhenReady();\n        }, this.MODAL_TRANSITION);\n      }, this.BACKDROP_TRANSITION);\n    } else {\n      this._focusTrap.focusInitialElementWhenReady();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    const widthWithVerticalScroll = this._document.body.offsetWidth;\n    this._renderer.addClass(this._document.body, 'modal-open');\n    const widthWithoutVerticalScroll = this._document.body.offsetWidth;\n    this._renderer.setStyle(\n      this._document.body,\n      'padding-right',\n      `${widthWithoutVerticalScroll - widthWithVerticalScroll}px`\n    );\n\n    if (!this._config.ignoreBackdropClick) {\n      fromEvent(this._elementRef.nativeElement, 'mousedown')\n        .pipe(\n          filter((event: MouseEvent) => {\n            const target = event.target as HTMLElement;\n            const dialog = this.modalDialog.nativeElement;\n            const notDialog = target !== dialog;\n            const notDialogContent = !dialog.contains(target);\n            return notDialog && notDialogContent;\n          }),\n          takeUntil(this._destroy$)\n        )\n        .subscribe((event: MouseEvent) => {\n          this.backdropClick$.next(event);\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._previouslyFocusedElement.focus();\n    this._focusTrap.destroy();\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  private _updateContainerClass(): void {\n    if (\n      this._config.containerClass === '' ||\n      (this._config.containerClass.length && this._config.containerClass.length === 0)\n    ) {\n      return;\n    }\n\n    const containerClasses = this._config.containerClass.split(' ');\n\n    containerClasses.forEach((containerClass) => {\n      this._renderer.addClass(this._elementRef.nativeElement, containerClass);\n    });\n  }\n\n  _close(): void {\n    if (this._config.animation) {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'show');\n    }\n\n    // Pause iframe/video when closing modal\n    const iframeElements = Array.from(this._elementRef.nativeElement.querySelectorAll('iframe'));\n    const videoElements = Array.from(this._elementRef.nativeElement.querySelectorAll('video'));\n\n    iframeElements.forEach((iframe: HTMLIFrameElement) => {\n      const srcAttribute: any = iframe.getAttribute('src');\n      this._renderer.setAttribute(iframe, 'src', srcAttribute);\n    });\n\n    videoElements.forEach((video: HTMLVideoElement) => {\n      video.pause();\n    });\n  }\n\n  _restoreScrollbar(): void {\n    this._renderer.removeClass(this._document.body, 'modal-open');\n    this._renderer.removeStyle(this._document.body, 'padding-right');\n  }\n\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    return this._portalOutlet.attachComponentPortal(portal);\n  }\n\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n    return this._portalOutlet.attachTemplatePortal(portal);\n  }\n}\n","<div #dialog [class]=\"'modal-dialog' + (_config.modalClass ? ' ' + _config.modalClass : '')\">\n  <div class=\"modal-content\">\n    <ng-template cdkPortalOutlet></ng-template>\n  </div>\n</div>\n","import { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal, ComponentType, TemplatePortal } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  ComponentFactoryResolver,\n  Inject,\n  Injectable,\n  Injector,\n  StaticProvider,\n  TemplateRef,\n} from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\nimport { MdbModalConfig } from './modal-config';\nimport { MdbModalContainerComponent } from './modal-container.component';\nimport { MdbModalRef } from './modal-ref';\n\n@Injectable()\nexport class MdbModalService {\n  constructor(\n    @Inject(DOCUMENT) private _document,\n    private _overlay: Overlay,\n    private _injector: Injector,\n    private _cfr: ComponentFactoryResolver\n  ) {}\n\n  open<T, D = any>(\n    componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\n    config?: MdbModalConfig<D>\n  ): MdbModalRef<T> {\n    const defaultConfig = new MdbModalConfig();\n    config = config ? Object.assign(defaultConfig, config) : defaultConfig;\n\n    const overlayRef = this._createOverlay(config);\n    const container = this._createContainer(overlayRef, config);\n    const modalRef = this._createContent(componentOrTemplateRef, container, overlayRef, config);\n\n    this._registerListeners<T>(modalRef, config, container);\n\n    return modalRef;\n  }\n\n  private _createOverlay(config: MdbModalConfig): OverlayRef {\n    const overlayConfig = this._getOverlayConfig(config);\n    return this._overlay.create(overlayConfig);\n  }\n\n  private _getOverlayConfig(modalConfig: MdbModalConfig): OverlayConfig {\n    const config = new OverlayConfig({\n      positionStrategy: this._overlay.position().global(),\n      scrollStrategy: this._overlay.scrollStrategies.noop(),\n      hasBackdrop: modalConfig.backdrop,\n      backdropClass: 'mdb-backdrop',\n    });\n\n    return config;\n  }\n\n  private _createContainer(\n    overlayRef: OverlayRef,\n    config: MdbModalConfig\n  ): MdbModalContainerComponent {\n    const portal = new ComponentPortal(MdbModalContainerComponent, null, this._injector, this._cfr);\n    const containerRef = overlayRef.attach(portal);\n    containerRef.instance._config = config;\n    return containerRef.instance;\n  }\n\n  private _createContent<T>(\n    componentOrTemplate: ComponentType<T> | TemplateRef<T>,\n    container: MdbModalContainerComponent,\n    overlayRef: OverlayRef,\n    config: MdbModalConfig\n  ): MdbModalRef<T> {\n    const modalRef = new MdbModalRef(overlayRef, container);\n\n    if (componentOrTemplate instanceof TemplateRef) {\n      container.attachTemplatePortal(\n        new TemplatePortal<T>(componentOrTemplate, null, {\n          $implicit: config.data,\n          modalRef,\n        } as any)\n      );\n    } else {\n      const injector = this._createInjector<T>(config, modalRef, container);\n      const contentRef = container.attachComponentPortal<T>(\n        new ComponentPortal(componentOrTemplate, config.viewContainerRef, injector)\n      );\n\n      if (config.data) {\n        Object.assign(contentRef.instance, { ...config.data });\n      }\n    }\n\n    return modalRef;\n  }\n\n  private _createInjector<T>(\n    config: MdbModalConfig,\n    modalRef: MdbModalRef<T>,\n    container: MdbModalContainerComponent\n  ): Injector {\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n\n    // The dialog container should be provided as the dialog container and the dialog's\n    // content are created out of the same `ViewContainerRef` and as such, are siblings\n    // for injector purposes. To allow the hierarchy that is expected, the dialog\n    // container is explicitly provided in the injector.\n    const providers: StaticProvider[] = [\n      { provide: MdbModalContainerComponent, useValue: container },\n      { provide: MdbModalRef, useValue: modalRef },\n    ];\n\n    return Injector.create({ parent: userInjector || this._injector, providers });\n  }\n\n  private _registerListeners<T>(\n    modalRef: MdbModalRef<T>,\n    config: MdbModalConfig,\n    container: MdbModalContainerComponent\n  ): void {\n    container.backdropClick$.pipe(take(1)).subscribe(() => {\n      modalRef.close();\n    });\n\n    if (config.keyboard) {\n      fromEvent(container._elementRef.nativeElement, 'keydown')\n        .pipe(\n          filter((event: KeyboardEvent) => {\n            return event.key === 'Escape';\n          }),\n          take(1)\n        )\n        .subscribe(() => {\n          modalRef.close();\n        });\n    }\n  }\n}\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { NgModule } from '@angular/core';\nimport { MdbModalContainerComponent } from './modal-container.component';\nimport { MdbModalService } from './modal.service';\n\n@NgModule({\n  imports: [OverlayModule, PortalModule],\n  exports: [MdbModalContainerComponent],\n  declarations: [MdbModalContainerComponent],\n  providers: [MdbModalService],\n})\nexport class MdbModalModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1"],"mappings":";;;;;;;;;;;AAEA;MACa,cAAc,CAAA;AAA3B,IAAA,WAAA,GAAA;QACE,IAAS,CAAA,SAAA,GAAa,IAAI,CAAC;QAC3B,IAAQ,CAAA,QAAA,GAAa,IAAI,CAAC;QAC1B,IAAmB,CAAA,mBAAA,GAAa,KAAK,CAAC;QACtC,IAAQ,CAAA,QAAA,GAAa,IAAI,CAAC;QAC1B,IAAU,CAAA,UAAA,GAAY,EAAE,CAAC;QACzB,IAAc,CAAA,cAAA,GAAY,EAAE,CAAC;QAE7B,IAAI,CAAA,IAAA,GAAc,IAAI,CAAC;KACxB;AAAA;;MCRY,WAAW,CAAA;IACtB,WAAsB,CAAA,WAAuB,EAAU,UAAsC,EAAA;QAAvE,IAAW,CAAA,WAAA,GAAX,WAAW,CAAY;QAAU,IAAU,CAAA,UAAA,GAAV,UAAU,CAA4B;AAE5E,QAAA,IAAA,CAAA,QAAQ,GAAiB,IAAI,OAAO,EAAE,CAAC;AAC/C,QAAA,IAAA,CAAA,OAAO,GAAoB,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;KAHgC;AAKjG,IAAA,KAAK,CAAC,OAAa,EAAA;AACjB,QAAA,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;QAEzB,UAAU,CAAC,MAAK;AACd,YAAA,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE,CAAC;AACpC,YAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC5B,YAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;AACzB,YAAA,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;AAC1B,YAAA,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;AAC7B,SAAC,EAAE,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;KACtC;AACF;;MCKY,0BAA0B,CAAA;AAqBrC,IAAA,WAAA,CAC4B,SAAS,EAC5B,WAAuB,EACtB,SAAoB,EACpB,iBAA+C,EAAA;QAH7B,IAAS,CAAA,SAAA,GAAT,SAAS,CAAA;QAC5B,IAAW,CAAA,WAAA,GAAX,WAAW,CAAY;QACtB,IAAS,CAAA,SAAA,GAAT,SAAS,CAAW;QACpB,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAA8B;AArBhD,QAAA,IAAA,CAAA,SAAS,GAAkB,IAAI,OAAO,EAAQ,CAAC;AAC/C,QAAA,IAAA,CAAA,cAAc,GAAwB,IAAI,OAAO,EAAc,CAAC;QAIzE,IAAmB,CAAA,mBAAA,GAAG,GAAG,CAAC;QAC1B,IAAgB,CAAA,gBAAA,GAAG,GAAG,CAAC;QAKK,IAAK,CAAA,KAAA,GAAG,IAAI,CAAC;KAWrC;AAVJ,IAAA,IACI,YAAY,GAAA;AACd,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;KAC/B;IASD,QAAQ,GAAA;QACN,IAAI,CAAC,qBAAqB,EAAE,CAAC;AAC7B,QAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QAC5E,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,SAAS,CAAC,aAA4B,CAAC;AAC7E,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;AAEhF,QAAA,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;YAC1B,UAAU,CAAC,MAAK;AACd,gBAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;gBAEhE,UAAU,CAAC,MAAK;AACd,oBAAA,IAAI,CAAC,UAAU,CAAC,4BAA4B,EAAE,CAAC;AACjD,iBAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;AAC5B,aAAC,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;AAC9B,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,UAAU,CAAC,4BAA4B,EAAE,CAAC;AAChD,SAAA;KACF;IAED,eAAe,GAAA;QACb,MAAM,uBAAuB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC;AAChE,QAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;QAC3D,MAAM,0BAA0B,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC;AACnE,QAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,CACrB,IAAI,CAAC,SAAS,CAAC,IAAI,EACnB,eAAe,EACf,CAAG,EAAA,0BAA0B,GAAG,uBAAuB,CAAA,EAAA,CAAI,CAC5D,CAAC;AAEF,QAAA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE;YACrC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,WAAW,CAAC;AACnD,iBAAA,IAAI,CACH,MAAM,CAAC,CAAC,KAAiB,KAAI;AAC3B,gBAAA,MAAM,MAAM,GAAG,KAAK,CAAC,MAAqB,CAAC;AAC3C,gBAAA,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;AAC9C,gBAAA,MAAM,SAAS,GAAG,MAAM,KAAK,MAAM,CAAC;gBACpC,MAAM,gBAAgB,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBAClD,OAAO,SAAS,IAAI,gBAAgB,CAAC;aACtC,CAAC,EACF,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAC1B;AACA,iBAAA,SAAS,CAAC,CAAC,KAAiB,KAAI;AAC/B,gBAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAClC,aAAC,CAAC,CAAC;AACN,SAAA;KACF;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,yBAAyB,CAAC,KAAK,EAAE,CAAC;AACvC,QAAA,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;AAC1B,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;AACtB,QAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;KAC3B;IAEO,qBAAqB,GAAA;AAC3B,QAAA,IACE,IAAI,CAAC,OAAO,CAAC,cAAc,KAAK,EAAE;AAClC,aAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,CAAC,EAChF;YACA,OAAO;AACR,SAAA;AAED,QAAA,MAAM,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAEhE,QAAA,gBAAgB,CAAC,OAAO,CAAC,CAAC,cAAc,KAAI;AAC1C,YAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC;AAC1E,SAAC,CAAC,CAAC;KACJ;IAED,MAAM,GAAA;AACJ,QAAA,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;AAC1B,YAAA,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;AACpE,SAAA;;AAGD,QAAA,MAAM,cAAc,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC7F,QAAA,MAAM,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC;AAE3F,QAAA,cAAc,CAAC,OAAO,CAAC,CAAC,MAAyB,KAAI;YACnD,MAAM,YAAY,GAAQ,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACrD,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE,YAAY,CAAC,CAAC;AAC3D,SAAC,CAAC,CAAC;AAEH,QAAA,aAAa,CAAC,OAAO,CAAC,CAAC,KAAuB,KAAI;YAChD,KAAK,CAAC,KAAK,EAAE,CAAC;AAChB,SAAC,CAAC,CAAC;KACJ;IAED,iBAAiB,GAAA;AACf,QAAA,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;AAC9D,QAAA,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;KAClE;AAED,IAAA,qBAAqB,CAAI,MAA0B,EAAA;QACjD,OAAO,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;KACzD;AAED,IAAA,oBAAoB,CAAI,MAAyB,EAAA;QAC/C,OAAO,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;KACxD;;AA/HU,0BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,0BAA0B,kBAsB3B,QAAQ,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,4BAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;2GAtBP,0BAA0B,EAAA,QAAA,EAAA,qBAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,aAAA,EAAA,YAAA,EAAA,YAAA,EAAA,mBAAA,EAAA,EAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,eAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAC1B,eAAe,EAAA,WAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,aAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,QAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EC3B5B,uMAKA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,OAAA,EAAA,CAAA,CAAA;2FDqBa,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBALtC,SAAS;+BACE,qBAAqB,EAAA,eAAA,EAEd,uBAAuB,CAAC,OAAO,EAAA,QAAA,EAAA,uMAAA,EAAA,CAAA;;0BAwB7C,MAAM;2BAAC,QAAQ,CAAA;wIArB4B,aAAa,EAAA,CAAA;sBAA1D,SAAS;AAAC,gBAAA,IAAA,EAAA,CAAA,eAAe,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;gBACL,WAAW,EAAA,CAAA;sBAAjD,SAAS;AAAC,gBAAA,IAAA,EAAA,CAAA,QAAQ,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;gBAaT,KAAK,EAAA,CAAA;sBAAhC,WAAW;uBAAC,aAAa,CAAA;gBAEtB,YAAY,EAAA,CAAA;sBADf,WAAW;uBAAC,YAAY,CAAA;;;MExBd,eAAe,CAAA;AAC1B,IAAA,WAAA,CAC4B,SAAS,EAC3B,QAAiB,EACjB,SAAmB,EACnB,IAA8B,EAAA;QAHZ,IAAS,CAAA,SAAA,GAAT,SAAS,CAAA;QAC3B,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAS;QACjB,IAAS,CAAA,SAAA,GAAT,SAAS,CAAU;QACnB,IAAI,CAAA,IAAA,GAAJ,IAAI,CAA0B;KACpC;IAEJ,IAAI,CACF,sBAAyD,EACzD,MAA0B,EAAA;AAE1B,QAAA,MAAM,aAAa,GAAG,IAAI,cAAc,EAAE,CAAC;AAC3C,QAAA,MAAM,GAAG,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC,GAAG,aAAa,CAAC;QAEvE,MAAM,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QAC/C,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;AAC5D,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,sBAAsB,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;QAE5F,IAAI,CAAC,kBAAkB,CAAI,QAAQ,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;AAExD,QAAA,OAAO,QAAQ,CAAC;KACjB;AAEO,IAAA,cAAc,CAAC,MAAsB,EAAA;QAC3C,MAAM,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;QACrD,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;KAC5C;AAEO,IAAA,iBAAiB,CAAC,WAA2B,EAAA;AACnD,QAAA,MAAM,MAAM,GAAG,IAAI,aAAa,CAAC;YAC/B,gBAAgB,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,MAAM,EAAE;YACnD,cAAc,EAAE,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,EAAE;YACrD,WAAW,EAAE,WAAW,CAAC,QAAQ;AACjC,YAAA,aAAa,EAAE,cAAc;AAC9B,SAAA,CAAC,CAAC;AAEH,QAAA,OAAO,MAAM,CAAC;KACf;IAEO,gBAAgB,CACtB,UAAsB,EACtB,MAAsB,EAAA;AAEtB,QAAA,MAAM,MAAM,GAAG,IAAI,eAAe,CAAC,0BAA0B,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAChG,MAAM,YAAY,GAAG,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC/C,QAAA,YAAY,CAAC,QAAQ,CAAC,OAAO,GAAG,MAAM,CAAC;QACvC,OAAO,YAAY,CAAC,QAAQ,CAAC;KAC9B;AAEO,IAAA,cAAc,CACpB,mBAAsD,EACtD,SAAqC,EACrC,UAAsB,EACtB,MAAsB,EAAA;QAEtB,MAAM,QAAQ,GAAG,IAAI,WAAW,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;QAExD,IAAI,mBAAmB,YAAY,WAAW,EAAE;YAC9C,SAAS,CAAC,oBAAoB,CAC5B,IAAI,cAAc,CAAI,mBAAmB,EAAE,IAAI,EAAE;gBAC/C,SAAS,EAAE,MAAM,CAAC,IAAI;gBACtB,QAAQ;AACF,aAAA,CAAC,CACV,CAAC;AACH,SAAA;AAAM,aAAA;AACL,YAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAI,MAAM,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;AACtE,YAAA,MAAM,UAAU,GAAG,SAAS,CAAC,qBAAqB,CAChD,IAAI,eAAe,CAAC,mBAAmB,EAAE,MAAM,CAAC,gBAAgB,EAAE,QAAQ,CAAC,CAC5E,CAAC;YAEF,IAAI,MAAM,CAAC,IAAI,EAAE;AACf,gBAAA,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;AACxD,aAAA;AACF,SAAA;AAED,QAAA,OAAO,QAAQ,CAAC;KACjB;AAEO,IAAA,eAAe,CACrB,MAAsB,EACtB,QAAwB,EACxB,SAAqC,EAAA;AAErC,QAAA,MAAM,YAAY,GAAG,MAAM,IAAI,MAAM,CAAC,gBAAgB,IAAI,MAAM,CAAC,gBAAgB,CAAC,QAAQ,CAAC;;;;;AAM3F,QAAA,MAAM,SAAS,GAAqB;AAClC,YAAA,EAAE,OAAO,EAAE,0BAA0B,EAAE,QAAQ,EAAE,SAAS,EAAE;AAC5D,YAAA,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE;SAC7C,CAAC;AAEF,QAAA,OAAO,QAAQ,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,YAAY,IAAI,IAAI,CAAC,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC;KAC/E;AAEO,IAAA,kBAAkB,CACxB,QAAwB,EACxB,MAAsB,EACtB,SAAqC,EAAA;AAErC,QAAA,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAK;YACpD,QAAQ,CAAC,KAAK,EAAE,CAAC;AACnB,SAAC,CAAC,CAAC;QAEH,IAAI,MAAM,CAAC,QAAQ,EAAE;YACnB,SAAS,CAAC,SAAS,CAAC,WAAW,CAAC,aAAa,EAAE,SAAS,CAAC;AACtD,iBAAA,IAAI,CACH,MAAM,CAAC,CAAC,KAAoB,KAAI;AAC9B,gBAAA,OAAO,KAAK,CAAC,GAAG,KAAK,QAAQ,CAAC;AAChC,aAAC,CAAC,EACF,IAAI,CAAC,CAAC,CAAC,CACR;iBACA,SAAS,CAAC,MAAK;gBACd,QAAQ,CAAC,KAAK,EAAE,CAAC;AACnB,aAAC,CAAC,CAAC;AACN,SAAA;KACF;;AAvHU,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,kBAEhB,QAAQ,EAAA,EAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,OAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,QAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,wBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;gHAFP,eAAe,EAAA,CAAA,CAAA;2FAAf,eAAe,EAAA,UAAA,EAAA,CAAA;kBAD3B,UAAU;;0BAGN,MAAM;2BAAC,QAAQ,CAAA;;;MCRP,cAAc,CAAA;;2GAAd,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAd,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,iBAHV,0BAA0B,CAAA,EAAA,OAAA,EAAA,CAF/B,aAAa,EAAE,YAAY,aAC3B,0BAA0B,CAAA,EAAA,CAAA,CAAA;AAIzB,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,aAFd,CAAC,eAAe,CAAC,EAHlB,OAAA,EAAA,CAAA,aAAa,EAAE,YAAY,CAAA,EAAA,CAAA,CAAA;2FAK1B,cAAc,EAAA,UAAA,EAAA,CAAA;kBAN1B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,aAAa,EAAE,YAAY,CAAC;oBACtC,OAAO,EAAE,CAAC,0BAA0B,CAAC;oBACrC,YAAY,EAAE,CAAC,0BAA0B,CAAC;oBAC1C,SAAS,EAAE,CAAC,eAAe,CAAC;AAC7B,iBAAA,CAAA;;;ACXD;;AAEG;;;;"}